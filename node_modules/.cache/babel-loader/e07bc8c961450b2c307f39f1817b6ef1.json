{"ast":null,"code":"var _jsxFileName = \"/home/pranjal/Projects/chess/src/components/Board.js\";\nimport React from 'react';\nimport * as Chess from 'chess.js';\nimport ini from '../initialBoard';\nimport MappedBoard from './mappedBoard';\nimport '../index.css';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: []\n    };\n\n    this.movefunc = (pos, piece) => {\n      //des = \"'\"+des+\"'\";\n      pos = \"'\" + pos + \"'\";\n      console.log(\"source\", pos, \"piece add\", piece);\n\n      if (piece !== '') {\n        //  console.log('piece is not null');\n        this.source = pos;\n        console.log(\"source position is\", this.source);\n      } else {\n        if (this.source !== '') {\n          console.log(\"source is\", this.source);\n          console.log(\"Successful\", pos);\n          this.chess.move({\n            from: this.source,\n            to: pos\n          });\n          console.log(this.chess.ascii());\n          this.source = '';\n        }\n      } //  this.chess.move({from:srcPos , to:des});\n      //  console.log(this.chess.ascii());\n      //  this.setState({ address : this.mapy(this.chess.fen()) })\n\n    };\n\n    this.eventReset = e => {\n      e.preventDefault();\n      this.chess.reset();\n      var a = this.mapy(this.chess.fen());\n      console.log(\"value recv\", a);\n      this.setState({\n        address: a\n      });\n      console.log(this.state.address);\n    };\n\n    this.eventClear = e => {\n      e.preventDefault();\n      this.chess.clear();\n      this.setState({\n        address: this.mapy(this.chess.fen())\n      });\n    };\n\n    this.chess = new Chess();\n    console.log(\"board is\", this.chess);\n    console.log(this.chess.ascii()); //  this.chess.move('e3');\n    //  console.log(this.chess.ascii());\n\n    console.log(this.chess.fen()); //  console.log(this.chess.get('e3'));\n    //  console.log(this.chess.ascii());\n\n    var source = '';\n  }\n\n  /*  processClick(position){\n    //TODO handle position click.\n    console.log(\"Position is\", position);\n      console.log(\"board is in process\", this.chessBoard.board());\n       this.chessBoard.move(this.retPosition(position));\n      console.log(\"board after move\", this.chessBoard.board);\n   }  */\n  retPosition(y, x) {\n    let yCord = y;\n    let xCord = x % 8;\n    let xAxis = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    let retVal = xAxis[xCord] + yCord;\n    return retVal;\n  }\n\n  isEven(num) {\n    return num % 2 === 0;\n  }\n\n  mapy(str) {\n    const c = [];\n\n    for (let i = 0, j = 0; i < 43 && j < 64; i++) {\n      var char = ini(str[i]);\n\n      if (char === 8) {\n        for (let k = 1; k <= Number(char); k++) {\n          c[j] = '';\n          j++;\n        }\n      } else if (char === '/') {\n        continue;\n      } else {\n        c[j] = char;\n        j++;\n      }\n    } //console.log(\"Mapy returns\", c);\n\n\n    return c;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.eventReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(\"button\", {\n      onClick: this.eventClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Clear Board\"), React.createElement(MappedBoard, {\n      address: this.state.address,\n      movefunc: this.movefunc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/pranjal/Projects/chess/src/components/Board.js"],"names":["React","Chess","ini","MappedBoard","Board","Component","constructor","props","state","address","movefunc","pos","piece","console","log","source","chess","move","from","to","ascii","eventReset","e","preventDefault","reset","a","mapy","fen","setState","eventClear","clear","retPosition","y","x","yCord","xCord","xAxis","retVal","isEven","num","str","c","i","j","char","k","Number","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as Chess from 'chess.js';\n\nimport ini from '../initialBoard';\nimport  MappedBoard from './mappedBoard';\nimport '../index.css';\nclass Board extends React.Component{\n\n constructor(props){\n    super(props);\n    this.chess= new Chess();\n    console.log(\"board is\", this.chess);\n    console.log(this.chess.ascii());\n  //  this.chess.move('e3');\n  //  console.log(this.chess.ascii());\n    console.log(this.chess.fen());\n  //  console.log(this.chess.get('e3'));\n  //  console.log(this.chess.ascii());\n    var source='';\n  }\n\n  state = {\n    address:[]\n  };\n  /*  processClick(position){\n    //TODO handle position click.\n    console.log(\"Position is\", position);\n      console.log(\"board is in process\", this.chessBoard.board());\n\n      this.chessBoard.move(this.retPosition(position));\n      console.log(\"board after move\", this.chessBoard.board);\n\n  }  */\n  retPosition(y,x){\n    let yCord = y;\n    let xCord = x % 8;\n    let xAxis = ['a','b','c','d','e','f','g','h'];\n    let retVal = xAxis[xCord]+yCord;\n    return retVal;\n  }\n  isEven(num){\n    return (num % 2 === 0);\n  }\n  mapy(str){\n    const c=[];\n\n    for(let i=0 , j=0 ;i<43 && j<64;i++ ){\n      var char=ini(str[i]);\n      if(char === 8)\n      {\n        for(let k=1;k<=Number(char);k++){\n          c[j]='';\n          j++;\n      }\n      }\n      else if(char === '/'){\n        continue;\n      }\n      else{\n      c[j] = char;\n      j++;\n      }\n    }\n    //console.log(\"Mapy returns\", c);\n    return(c);\n  }\n  movefunc = (pos,piece) => {\n    //des = \"'\"+des+\"'\";\n    pos = \"'\"+pos+\"'\";\n\n    console.log(\"source\",pos,\"piece add\",piece);\n    if(piece!==''){\n    //  console.log('piece is not null');\n    this.source = pos;\n    console.log(\"source position is\",this.source);\n    }\n    else{\n      if(this.source!==''){\n        console.log(\"source is\",this.source);\n        console.log(\"Successful\",pos);\n        this.chess.move({from:this.source , to:pos});\n        console.log(this.chess.ascii());\n        this.source='';\n      }\n    }\n  //  this.chess.move({from:srcPos , to:des});\n  //  console.log(this.chess.ascii());\n  //  this.setState({ address : this.mapy(this.chess.fen()) })\n  }\n\n\n  eventReset=(e)=>{\n    e.preventDefault();\n    this.chess.reset();\n    var a = this.mapy(this.chess.fen());\n    console.log(\"value recv\",a);\n    this.setState({ address : a });\n    console.log(this.state.address);\n  }\n  eventClear=(e)=>{\n    e.preventDefault();\n    this.chess.clear();\n    this.setState({ address : this.mapy(this.chess.fen())});\n  }\n\n  render(){\n    return (\n      <div>\n      <button\n        onClick={this.eventReset}\n      >Reset</button>\n      <button\n        onClick={this.eventClear}\n      >Clear Board</button>\n      <MappedBoard\n        address={this.state.address}\n        movefunc={this.movefunc}\n      />\n      </div>\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}