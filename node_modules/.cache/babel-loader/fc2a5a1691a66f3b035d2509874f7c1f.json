{"ast":null,"code":"import React from 'react';\nimport * as Chess from 'chess.js';\nimport pieceMap from '../PieceMapping';\nexport default class ChessManager {\n  constructor(props) {\n    //  super(props);\n    this.chess = new Chess();\n  }\n\n  reset() {\n    this.chess.reset();\n  }\n\n  map() {\n    this.chess.fen(); //maps fen string against our board\n\n    const c = [];\n\n    for (let i = 0, j = 0; i < 64 && j < 64; i++) {\n      var char = pieceMap(str[i]);\n\n      if (char === Number(char)) {\n        for (let k = 1; k <= Number(char); k++) {\n          c[j] = '';\n          j++;\n        }\n      } else if (char === '/') {\n        continue;\n      } else {\n        c[j] = char;\n        j++;\n      }\n    }\n\n    return c;\n  }\n\n}","map":{"version":3,"sources":["/home/pranjal/Projects/chess/src/services/ChessManager.js"],"names":["React","Chess","pieceMap","ChessManager","constructor","props","chess","reset","map","fen","c","i","j","char","str","Number","k"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,eAAe,MAAMC,YAAN,CAAkB;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB;AACE,SAAKC,KAAL,GAAW,IAAIL,KAAJ,EAAX;AACD;;AACDM,EAAAA,KAAK,GAAE;AACL,SAAKD,KAAL,CAAWC,KAAX;AACD;;AAEDC,EAAAA,GAAG,GAAE;AACH,SAAKF,KAAL,CAAWG,GAAX,GADG,CACyD;;AAC5D,UAAMC,CAAC,GAAC,EAAR;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAN,EAAUC,CAAC,GAAC,CAAhB,EAAmBD,CAAC,GAAC,EAAF,IAAQC,CAAC,GAAC,EAA7B,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,UAAIE,IAAI,GAACX,QAAQ,CAACY,GAAG,CAACH,CAAD,CAAJ,CAAjB;;AACA,UAAGE,IAAI,KAAKE,MAAM,CAACF,IAAD,CAAlB,EACA;AACE,aAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAED,MAAM,CAACF,IAAD,CAArB,EAA4BG,CAAC,EAA7B,EAAgC;AAC9BN,UAAAA,CAAC,CAACE,CAAD,CAAD,GAAK,EAAL;AACAA,UAAAA,CAAC;AACF;AACF,OAND,MAOK,IAAGC,IAAI,KAAK,GAAZ,EAAgB;AACnB;AACD,OAFI,MAGD;AACJH,QAAAA,CAAC,CAACE,CAAD,CAAD,GAAOC,IAAP;AACAD,QAAAA,CAAC;AACA;AACF;;AACD,WAAOF,CAAP;AACD;;AA9B8B","sourcesContent":["import React from 'react';\nimport * as Chess from 'chess.js';\nimport pieceMap from '../PieceMapping';\n\nexport default class ChessManager{\n  constructor(props){\n  //  super(props);\n    this.chess=new Chess();\n  }\n  reset(){\n    this.chess.reset();\n  }\n\n  map(){\n    this.chess.fen();                                           //maps fen string against our board\n    const c=[];\n    for(let i=0 , j=0 ;i<64 && j<64;i++ ){\n      var char=pieceMap(str[i]);\n      if(char === Number(char))\n      {\n        for(let k=1;k<=Number(char);k++){\n          c[j]='';\n          j++;\n        }\n      }\n      else if(char === '/'){\n        continue;\n      }\n      else{\n      c[j] = char;\n      j++;\n      }\n    }\n    return(c);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}