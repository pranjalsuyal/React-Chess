{"ast":null,"code":"var _jsxFileName = \"/home/pranjal/Projects/chess/src/components/mappedBoard.js\";\nimport React from 'react';\nimport Square from './Square';\nimport '../index.css';\n\nclass MappedBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"props are\", props);\n    this.ar = props.address;\n    this.movefunc = props.movefunc;\n    console.log(\"hello\", this.ar);\n  }\n\n  isEven(num) {\n    return num % 2 === 0;\n  }\n\n  retPosition(y, x) {\n    let yCord = y;\n    let xCord = x % 8;\n    let xAxis = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    let retVal = xAxis[xCord] + yCord;\n    return retVal;\n  }\n\n  render() {\n    var completeBoard = [];\n    var count = 0;\n\n    for (var i = 8; i >= 1; i--) {\n      var rowSquare = [];\n\n      for (var j = 0; j < 8; j++) {\n        const squareColor = this.isEven(i) && this.isEven(j) || !this.isEven(i) && !this.isEven(j) ? \"square-white\" : \"square-black\";\n        rowSquare.push(React.createElement(Square, {\n          color: squareColor,\n          position: this.retPosition(i, j),\n          key: this.retPosition(i, j),\n          address: this.props.address[count],\n          movefunc: this.props.movefunc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }));\n        count += 1;\n      }\n\n      completeBoard.push(rowSquare);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, completeBoard);\n  }\n\n}\n\nexport default MappedBoard;","map":{"version":3,"sources":["/home/pranjal/Projects/chess/src/components/mappedBoard.js"],"names":["React","Square","MappedBoard","Component","constructor","props","console","log","ar","address","movefunc","isEven","num","retPosition","y","x","yCord","xCord","xAxis","retVal","render","completeBoard","count","i","rowSquare","j","squareColor","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,cAAP;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAAyC;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAzB;AACA,SAAKG,EAAL,GAAQH,KAAK,CAACI,OAAd;AACA,SAAKC,QAAL,GAAcL,KAAK,CAACK,QAApB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKC,EAAzB;AACD;;AAEHG,EAAAA,MAAM,CAACC,GAAD,EAAK;AACT,WAAQA,GAAG,GAAG,CAAN,KAAY,CAApB;AACD;;AAEDC,EAAAA,WAAW,CAACC,CAAD,EAAGC,CAAH,EAAK;AACd,QAAIC,KAAK,GAAGF,CAAZ;AACA,QAAIG,KAAK,GAAGF,CAAC,GAAG,CAAhB;AACA,QAAIG,KAAK,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,CAAZ;AACA,QAAIC,MAAM,GAAGD,KAAK,CAACD,KAAD,CAAL,GAAaD,KAA1B;AACA,WAAOG,MAAP;AACD;;AACDC,EAAAA,MAAM,GAAE;AACN,QAAIC,aAAa,GAAE,EAAnB;AACA,QAAIC,KAAK,GAAG,CAAZ;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAE,CAAf,EAAiBA,CAAC,EAAlB,EAAqB;AACnB,UAAIC,SAAS,GAAE,EAAf;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AAClB,cAAMC,WAAW,GAAI,KAAKf,MAAL,CAAYY,CAAZ,KAAkB,KAAKZ,MAAL,CAAYc,CAAZ,CAAnB,IAAuC,CAAC,KAAKd,MAAL,CAAYY,CAAZ,CAAD,IAAmB,CAAC,KAAKZ,MAAL,CAAYc,CAAZ,CAA3D,GAA4E,cAA5E,GAA6F,cAAjH;AACAD,QAAAA,SAAS,CAACG,IAAV,CAAe,oBAAC,MAAD;AACG,UAAA,KAAK,EAAED,WADV;AAEG,UAAA,QAAQ,EAAE,KAAKb,WAAL,CAAiBU,CAAjB,EAAmBE,CAAnB,CAFb;AAGG,UAAA,GAAG,EAAE,KAAKZ,WAAL,CAAiBU,CAAjB,EAAmBE,CAAnB,CAHR;AAIG,UAAA,OAAO,EAAE,KAAKpB,KAAL,CAAWI,OAAX,CAAmBa,KAAnB,CAJZ;AAKG,UAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWK,QALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AAOAY,QAAAA,KAAK,IAAE,CAAP;AACD;;AACDD,MAAAA,aAAa,CAACM,IAAd,CAAmBH,SAAnB;AACD;;AACC,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBH,aAAxB,CADF;AAIH;;AA3CwC;;AA6CzC,eAAenB,WAAf","sourcesContent":["import React from 'react';\nimport Square from './Square';\nimport '../index.css';\n\nclass MappedBoard extends React.Component{\n\n  constructor(props){\n    super(props);\n    console.log(\"props are\", props);\n    this.ar=props.address;\n    this.movefunc=props.movefunc;\n    console.log(\"hello\",this.ar);\n  }\n\nisEven(num){\n  return (num % 2 === 0);\n}\n\nretPosition(y,x){\n  let yCord = y;\n  let xCord = x % 8;\n  let xAxis = ['a','b','c','d','e','f','g','h'];\n  let retVal = xAxis[xCord]+yCord;\n  return retVal;\n}\nrender(){\n  var completeBoard =[];\n  var count = 0;\n  for(var i=8;i>=1;i--){\n    var rowSquare =[];\n    for(var j=0;j<8;j++){\n      const squareColor = (this.isEven(i) && this.isEven(j)) || (!this.isEven(i) && !this.isEven(j))? \"square-white\" : \"square-black\";\n      rowSquare.push(<Square\n                        color={squareColor}\n                        position={this.retPosition(i,j)}\n                        key={this.retPosition(i,j)}\n                        address={this.props.address[count]}\n                        movefunc={this.props.movefunc}\n                    />);\n      count+=1;\n    }\n    completeBoard.push(rowSquare);\n  }\n    return(\n      <div className=\"board\">{completeBoard}</div>\n    )\n\n}\n}\nexport default MappedBoard;\n"]},"metadata":{},"sourceType":"module"}