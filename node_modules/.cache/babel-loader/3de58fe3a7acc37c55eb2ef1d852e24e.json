{"ast":null,"code":"var _jsxFileName = \"/home/pranjal/Projects/first/chess/src/components/Board.js\";\nimport React from 'react';\nimport * as Chess from 'chess.js';\nimport '../index.css';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chessBoard = new Chess();\n    console.log(\"board is\", this.chessBoard);\n  }\n\n  processClick(position) {\n    //TODO handle position click.\n    console.log(\"Position is\", position);\n    console.log(\"board is in process\", this.chessBoard);\n    this.chessBoard.move(this.retPosition(position));\n    console.log(\"board after move\", this.chessBoard);\n  }\n\n  retPosition(intpos) {\n    let xCord = intpos / 8;\n    let yCord = intpos % 8;\n    let xAxis = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    let retVal = xAxis[xCord] + yCord;\n    console.log(retVal);\n    return retVal;\n  }\n\n  render() {\n    var color = 0;\n    var squares = [];\n\n    for (let i = 0; i < 64; i++) {\n      if (i % 16 === 0) {\n        squares.push(React.createElement(\"div\", {\n          className: \"square-white\",\n          key: i,\n          onClick: () => {\n            console.log(i);\n            this.processClick(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n        color = 0;\n      } else if (i % 8 === 0) {\n        squares.push(React.createElement(\"div\", {\n          className: \"square-black\",\n          key: i,\n          onClick: () => {\n            console.log(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }));\n        color = 1;\n      } else if (color === 1) {\n        squares.push(React.createElement(\"div\", {\n          className: \"square-white\",\n          key: i,\n          onClick: () => {\n            console.log(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }));\n        color = 0;\n      } else {\n        squares.push(React.createElement(\"div\", {\n          className: \"square-black\",\n          key: i,\n          onClick: () => {\n            console.log(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }));\n        color = 1;\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, squares);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/pranjal/Projects/first/chess/src/components/Board.js"],"names":["React","Chess","Board","Component","constructor","props","chessBoard","console","log","processClick","position","move","retPosition","intpos","xCord","yCord","xAxis","retVal","render","color","squares","i","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as Chess from 'chess.js';\nimport '../index.css';\nclass Board extends React.Component{\n\n\n\n  constructor(props){\n    super(props);\n    this.chessBoard = new Chess();\n    console.log(\"board is\", this.chessBoard);\n\n  }\n\n  processClick(position){\n    //TODO handle position click.\n    console.log(\"Position is\", position);\n      console.log(\"board is in process\", this.chessBoard);\n\n      this.chessBoard.move(this.retPosition(position));\n      console.log(\"board after move\", this.chessBoard);\n\n  }\n  retPosition(intpos){\n    let xCord = intpos / 8;\n    let yCord = intpos % 8;\n\n    let xAxis = ['a','b','c','d','e','f','g','h'];\n\n    let retVal = xAxis[xCord]+yCord;\n    console.log(retVal);\n    return retVal;\n\n  }\n\n  render(){\n\n    var color=0;\n    var squares=[];\n    for(let i=0;i<64;i++)\n    {\n      if(i%16===0){\n        squares.push(<div className=\"square-white\" key={i} onClick={() => {\n          console.log(i);\n          this.processClick(i);\n        }}></div>);\n        color=0;\n      }\n      else if(i%8===0){\n        squares.push(<div className=\"square-black\" key={i} onClick={() => {\n          console.log(i);\n        }}></div>);\n        color=1;\n      }\n      else if(color===1){\n        squares.push(<div className=\"square-white\" key={i} onClick={() => {\n          console.log(i);\n        }}></div>);\n        color=0;\n      }\n      else{\n        squares.push(<div className=\"square-black\" key={i} onClick={() => {\n          console.log(i);\n        }}></div>);\n        color=1;\n      }\n    }\n    return (\n\n      <div className=\"board\">{squares}</div>\n\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}