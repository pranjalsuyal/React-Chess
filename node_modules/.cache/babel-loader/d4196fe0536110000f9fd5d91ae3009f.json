{"ast":null,"code":"var _jsxFileName = \"/home/pranjal/Projects/chess/src/components/Board.js\";\nimport React from 'react';\nimport * as Chess from 'chess.js';\nimport Square from './Square';\nimport ini from '../initialBoard';\nimport MappedBoard from './mappedBoard';\nimport '../index.css';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: []\n    };\n\n    this.eventReset = e => {\n      //  this.map(this.chess.fen());\n      e.preventDefault();\n      var a = this.mapy(this.chess.fen());\n      console.log(\"value recv\", a); //  a.map(item => console.log(item));\n      //  this.state.pieceSrc= a.map(item => this.setState({ pieceSrc : item }));\n\n      var b = [];\n\n      for (let i = 8; i >= 1; i--) {\n        for (let j = 0; j < 8; j++) {\n          b[i] = this.retPosition(i, j);\n        }\n      }\n\n      this.setState({\n        address: a\n      });\n      console.log(this.state.address);\n    };\n\n    this.chess = new Chess();\n    console.log(\"board is\", this.chess);\n    console.log(this.chess.ascii()); //  this.chess.move('e3');\n    //  console.log(this.chess.ascii());\n\n    console.log(this.chess.fen()); //  console.log(this.chess.get('e3'));\n    //  console.log(this.chess.ascii());\n  }\n\n  /*  processClick(position){\n    //TODO handle position click.\n    console.log(\"Position is\", position);\n      console.log(\"board is in process\", this.chessBoard.board());\n       this.chessBoard.move(this.retPosition(position));\n      console.log(\"board after move\", this.chessBoard.board);\n   }  */\n  retPosition(y, x) {\n    let yCord = y;\n    let xCord = x % 8;\n    let xAxis = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    let retVal = xAxis[xCord] + yCord;\n    return retVal;\n  }\n\n  isEven(num) {\n    return num % 2 === 0;\n  }\n\n  mapy(str) {\n    const c = [];\n    var j;\n\n    for (let i = 0, j = 0; i < 43; i++) {\n      var char = ini(str[i]);\n\n      if (char == 8) //is char a number?\n        {\n          for (let k = 1; k <= Number(char); k++) {\n            c[j] = '';\n            j++;\n          }\n        } else if (char == '/') {\n        continue;\n      } else {\n        c[j] = char;\n        j++;\n      }\n    } //console.log(\"Mapy returns\", c);\n\n\n    return c;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.eventReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(MappedBoard, {\n      address: this.state.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/pranjal/Projects/chess/src/components/Board.js"],"names":["React","Chess","Square","ini","MappedBoard","Board","Component","constructor","props","state","address","eventReset","e","preventDefault","a","mapy","chess","fen","console","log","b","i","j","retPosition","setState","ascii","y","x","yCord","xCord","xAxis","retVal","isEven","num","str","c","char","k","Number","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as Chess from 'chess.js';\nimport Square from './Square';\nimport ini from '../initialBoard';\nimport  MappedBoard from './mappedBoard';\nimport '../index.css';\nclass Board extends React.Component{\n\n constructor(props){\n    super(props);\n    this.chess= new Chess();\n    console.log(\"board is\", this.chess);\n    console.log(this.chess.ascii());\n  //  this.chess.move('e3');\n  //  console.log(this.chess.ascii());\n    console.log(this.chess.fen());\n  //  console.log(this.chess.get('e3'));\n  //  console.log(this.chess.ascii());\n  }\n\n  state = {\n    address:[]\n  };\n  /*  processClick(position){\n    //TODO handle position click.\n    console.log(\"Position is\", position);\n      console.log(\"board is in process\", this.chessBoard.board());\n\n      this.chessBoard.move(this.retPosition(position));\n      console.log(\"board after move\", this.chessBoard.board);\n\n  }  */\n  retPosition(y,x){\n    let yCord = y;\n    let xCord = x % 8;\n    let xAxis = ['a','b','c','d','e','f','g','h'];\n    let retVal = xAxis[xCord]+yCord;\n    return retVal;\n  }\n  isEven(num){\n    return (num % 2 === 0);\n  }\n  mapy(str){\n    const c=[];\n    var j;\n    for(let i=0 , j=0 ;i<43;i++ ){\n      var char=ini(str[i]);\n      if(char == 8)               //is char a number?\n      {\n        for(let k=1;k<=Number(char);k++){\n          c[j]='';\n          j++;\n      }\n      }\n      else if(char == '/'){\n        continue;\n      }\n      else{\n      c[j] = char;\n      j++;\n      }\n    }\n    //console.log(\"Mapy returns\", c);\n    return(c);\n  }\n\n\n  eventReset=(e)=>{\n  //  this.map(this.chess.fen());\n    e.preventDefault();\n    var a = this.mapy(this.chess.fen());\n    console.log(\"value recv\",a);\n  //  a.map(item => console.log(item));\n\n  //  this.state.pieceSrc= a.map(item => this.setState({ pieceSrc : item }));\n    var b=[];\n    for(let i=8;i>=1;i--){\n      for(let j=0;j<8;j++){\n        b[i]=this.retPosition(i,j);\n      }\n    }\n    this.setState({ address : a });\n    console.log(this.state.address);\n  }\n  render(){\n    return (\n      <div>\n      <button\n        onClick={this.eventReset}\n      >Reset</button>\n      <MappedBoard\n        address={this.state.address}\n      />\n      </div>\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}