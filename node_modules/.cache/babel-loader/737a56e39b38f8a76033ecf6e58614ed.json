{"ast":null,"code":"var _jsxFileName = \"/home/pranjal/Projects/chess/src/components/mappedBoard.js\";\nimport React from 'react';\nimport Square from './Square';\n\nfunction isEven(num) {\n  return num % 2 === 0;\n}\n\nfunction retPosition(y, x) {\n  let yCord = y;\n  let xCord = x % 8;\n  let xAxis = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  let retVal = xAxis[xCord] + yCord; //console.log(retVal);\n\n  return retVal;\n}\n\nexport default function mappedBoard(ar) {\n  var p = [];\n\n  for (let i = 8; i >= 1; i--) {\n    for (let j = 0; j < 8; j++) {\n      p[i] = retPosition(i, j);\n    }\n  }\n\n  var completeBoard = [];\n  var count = 0;\n\n  for (var i = 8; i >= 1; i--) {\n    var rowSquare = [];\n\n    for (var j = 0; j < 8; j++) {\n      const squareColor = this.isEven(i) && this.isEven(j) || !this.isEven(i) && !this.isEven(j) ? \"square-white\" : \"square-black\";\n      rowSquare.push(React.createElement(Square, {\n        color: squareColor,\n        position: this.retPosition(i, j),\n        key: this.retPosition(i, j),\n        pieceSrc: ar[count],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n      count += 1;\n    }\n\n    return completeBoard.push(rowSquare);\n  }\n}","map":{"version":3,"sources":["/home/pranjal/Projects/chess/src/components/mappedBoard.js"],"names":["React","Square","isEven","num","retPosition","y","x","yCord","xCord","xAxis","retVal","mappedBoard","ar","p","i","j","completeBoard","count","rowSquare","squareColor","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,MAAT,CAAgBC,GAAhB,EAAoB;AAClB,SAAQA,GAAG,GAAG,CAAN,KAAY,CAApB;AACD;;AAED,SAASC,WAAT,CAAqBC,CAArB,EAAuBC,CAAvB,EAAyB;AACvB,MAAIC,KAAK,GAAGF,CAAZ;AACA,MAAIG,KAAK,GAAGF,CAAC,GAAG,CAAhB;AAEA,MAAIG,KAAK,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,CAAZ;AAEA,MAAIC,MAAM,GAAGD,KAAK,CAACD,KAAD,CAAL,GAAaD,KAA1B,CANuB,CAOvB;;AACA,SAAOG,MAAP;AACD;;AAED,eAAe,SAASC,WAAT,CAAqBC,EAArB,EAAwB;AAErC,MAAIC,CAAC,GAAG,EAAR;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAE,CAAf,EAAiBA,CAAC,EAAlB,EAAqB;AACnB,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AAChBF,MAAAA,CAAC,CAACC,CAAD,CAAD,GAAKV,WAAW,CAACU,CAAD,EAAGC,CAAH,CAAhB;AACH;AACF;;AACD,MAAIC,aAAa,GAAE,EAAnB;AACA,MAAIC,KAAK,GAAG,CAAZ;;AACA,OAAI,IAAIH,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAE,CAAf,EAAiBA,CAAC,EAAlB,EAAqB;AACnB,QAAII,SAAS,GAAE,EAAf;;AACA,SAAI,IAAIH,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AAClB,YAAMI,WAAW,GAAI,KAAKjB,MAAL,CAAYY,CAAZ,KAAkB,KAAKZ,MAAL,CAAYa,CAAZ,CAAnB,IAAuC,CAAC,KAAKb,MAAL,CAAYY,CAAZ,CAAD,IAAmB,CAAC,KAAKZ,MAAL,CAAYa,CAAZ,CAA3D,GAA4E,cAA5E,GAA6F,cAAjH;AACAG,MAAAA,SAAS,CAACE,IAAV,CAAe,oBAAC,MAAD;AACG,QAAA,KAAK,EAAED,WADV;AAEG,QAAA,QAAQ,EAAE,KAAKf,WAAL,CAAiBU,CAAjB,EAAmBC,CAAnB,CAFb;AAGG,QAAA,GAAG,EAAE,KAAKX,WAAL,CAAiBU,CAAjB,EAAmBC,CAAnB,CAHR;AAIG,QAAA,QAAQ,EAAEH,EAAE,CAACK,KAAD,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AAMAA,MAAAA,KAAK,IAAE,CAAP;AACD;;AACD,WAAOD,aAAa,CAACI,IAAd,CAAmBF,SAAnB,CAAP;AACD;AAEF","sourcesContent":["import React from 'react';\nimport Square from './Square';\n\nfunction isEven(num){\n  return (num % 2 === 0);\n}\n\nfunction retPosition(y,x){\n  let yCord = y;\n  let xCord = x % 8;\n\n  let xAxis = ['a','b','c','d','e','f','g','h'];\n\n  let retVal = xAxis[xCord]+yCord;\n  //console.log(retVal);\n  return retVal;\n}\n\nexport default function mappedBoard(ar){\n\n  var p = [];\n  for(let i=8;i>=1;i--){\n    for(let j=0;j<8;j++){\n        p[i]=retPosition(i,j);\n    }\n  }\n  var completeBoard =[];\n  var count = 0;\n  for(var i=8;i>=1;i--){\n    var rowSquare =[];\n    for(var j=0;j<8;j++){\n      const squareColor = (this.isEven(i) && this.isEven(j)) || (!this.isEven(i) && !this.isEven(j))? \"square-white\" : \"square-black\";\n      rowSquare.push(<Square\n                        color={squareColor}\n                        position={this.retPosition(i,j)}\n                        key={this.retPosition(i,j)}\n                        pieceSrc={ar[count]}\n                    />);\n      count+=1;\n    }\n    return(completeBoard.push(rowSquare));\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}